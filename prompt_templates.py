"""
プロンプトテンプレート管理
"""

from langchain.prompts import PromptTemplate

class PlotTemplates:
    def __init__(self):
        self.templates = {
            "fantasy": PromptTemplate(
                input_variables=["user_input", "character_memory"],
                template="""
あなたは創作支援AIです。ファンタジージャンルの魅力的なプロットを生成してください。

【ジャンル】ファンタジー
【要求】{user_input}

【キャラクター情報】
{character_memory}

【プロット構成】
以下の6章構成で詳細なプロットを作成してください：

## 1. 導入部
- 主人公の日常と世界観の紹介
- 魔法や幻想的要素の自然な導入

## 2. 発端
- 冒険の始まりとなる事件や出会い
- 主人公の目標や使命の明確化

## 3. 展開
- 困難や試練の連続
- 仲間との出会いや成長

## 4. 転換点
- 大きな危機や重要な発見
- 物語の方向性を決める重要な選択

## 5. クライマックス
- 最終的な戦いや対決
- これまでの成長の集大成

## 6. 結末
- 問題の解決と新たな日常
- 主人公の成長の確認

各章は具体的で魅力的な内容にしてください。
"""
            ),
            
            "romance": PromptTemplate(
                input_variables=["user_input", "character_memory"],
                template="""
あなたは創作支援AIです。恋愛ジャンルの心温まるプロットを生成してください。

【ジャンル】恋愛
【要求】{user_input}

【キャラクター情報】
{character_memory}

【プロット構成】
以下の6章構成で感動的なプロットを作成してください：

## 1. 導入部
- 主人公の現在の状況と恋愛観
- 日常生活の描写

## 2. 発端
- 運命的な出会いや再会
- 恋愛感情の芽生え

## 3. 展開
- 関係の深まりと障害の出現
- 心の葛藤と成長

## 4. 転換点
- 大きな誤解や別れの危機
- 真の気持ちの自覚

## 5. クライマックス
- 愛の告白や重要な決断
- 障害の克服

## 6. 結末
- 幸せな結ばれ方
- 新しい人生のスタート

感情豊かで読者の心に響く内容にしてください。
"""
            ),
            
            "mystery": PromptTemplate(
                input_variables=["user_input", "character_memory"],
                template="""
あなたは創作支援AIです。ミステリージャンルの謎解きプロットを生成してください。

【ジャンル】ミステリー
【要求】{user_input}

【キャラクター情報】
{character_memory}

【プロット構成】
以下の6章構成で論理的なプロットを作成してください：

## 1. 導入部
- 事件発生前の状況設定
- 登場人物の紹介

## 2. 発端
- 謎めいた事件の発生
- 捜査の開始

## 3. 展開
- 手がかりの収集と分析
- 偽の手がかりや新たな謎

## 4. 転換点
- 重要な証拠の発見
- 真相に近づく推理

## 5. クライマックス
- 犯人の特定と対峙
- 謎の完全な解明

## 6. 結末
- 事件の解決と後日談
- 登場人物たちのその後

論理的で納得できる謎解きを心がけてください。
"""
            ),
            
            "sci_fi": PromptTemplate(
                input_variables=["user_input", "character_memory"],
                template="""
あなたは創作支援AIです。SF（サイエンスフィクション）ジャンルの未来的なプロットを生成してください。

【ジャンル】SF
【要求】{user_input}

【キャラクター情報】
{character_memory}

【プロット構成】
以下の6章構成で科学的なプロットを作成してください：

## 1. 導入部
- 未来世界の設定と技術
- 主人公の生活環境

## 2. 発端
- 科学技術に関する問題の発生
- 主人公の関与の始まり

## 3. 展開
- 技術的な謎や危機の拡大
- 科学的な調査と発見

## 4. 転換点
- 重大な真実の発覚
- 人類や世界への影響の理解

## 5. クライマックス
- 科学技術を駆使した解決策
- 未来への重要な選択

## 6. 結末
- 新しい世界秩序の確立
- 科学技術と人間性の調和

科学的根拠と想像力を両立させてください。
"""
            ),
            
            "horror": PromptTemplate(
                input_variables=["user_input", "character_memory"],
                template="""
あなたは創作支援AIです。ホラージャンルの恐怖に満ちたプロットを生成してください。

【ジャンル】ホラー
【要求】{user_input}

【キャラクター情報】
{character_memory}

【プロット構成】
以下の6章構成で恐怖感のあるプロットを作成してください：

## 1. 導入部
- 平穏な日常の描写
- 不穏な前兆の暗示

## 2. 発端
- 最初の超常現象や異変
- 恐怖の始まり

## 3. 展開
- 恐怖の段階的な増大
- 真相への手がかり探し

## 4. 転換点
- 恐怖の正体の一部判明
- 絶望的な状況への突入

## 5. クライマックス
- 最大の恐怖との対峙
- 生死をかけた戦い

## 6. 結末
- 恐怖からの解放（または新たな恐怖）
- 体験の意味と影響

心理的恐怖を重視し、読者を引き込む内容にしてください。
"""
            ),
            
            "slice_of_life": PromptTemplate(
                input_variables=["user_input", "character_memory"],
                template="""
あなたは創作支援AIです。日常系ジャンルの心温まるプロットを生成してください。

【ジャンル】日常系
【要求】{user_input}

【キャラクター情報】
{character_memory}

【プロット構成】
以下の6章構成で穏やかなプロットを作成してください：

## 1. 導入部
- 主人公の日常生活の紹介
- 周囲の人々との関係

## 2. 発端
- 小さな変化や新しい出会い
- 日常に起こる小さな出来事

## 3. 展開
- 人間関係の深まり
- 日々の小さな成長や発見

## 4. 転換点
- 心境の変化や重要な気づき
- 人生観の変化

## 5. クライマックス
- 感動的な出来事や決断
- 人とのつながりの実感

## 6. 結末
- より豊かな日常の始まり
- 成長した主人公の新しい日々

日常の美しさと人間関係の温かさを描いてください。
"""
            ),
            
            "adventure": PromptTemplate(
                input_variables=["user_input", "character_memory"],
                template="""
あなたは創作支援AIです。冒険ジャンルのスリリングなプロットを生成してください。

【ジャンル】冒険
【要求】{user_input}

【キャラクター情報】
{character_memory}

【プロット構成】
以下の6章構成でエキサイティングなプロットを作成してください：

## 1. 導入部
- 冒険の舞台設定
- 主人公の動機と目標

## 2. 発端
- 冒険の始まりとなる出来事
- 旅立ちと最初の困難

## 3. 展開
- 様々な試練と障害
- 新しい場所での発見と成長

## 4. 転換点
- 大きな危機や重要な選択
- 仲間との絆の深まり

## 5. クライマックス
- 最終目標への挑戦
- 全力を尽くした戦いや努力

## 6. 結末
- 冒険の成功と帰還
- 経験による成長の確認

スリルと感動を両立させた内容にしてください。
"""
            )
        }
        
        self.display_names = {
            "fantasy": "ファンタジー",
            "romance": "恋愛",
            "mystery": "ミステリー", 
            "sci_fi": "SF",
            "horror": "ホラー",
            "slice_of_life": "日常系",
            "adventure": "冒険"
        }
    
    def get_template(self, genre: str) -> PromptTemplate:
        """指定されたジャンルのテンプレートを取得"""
        return self.templates.get(genre, self.templates["fantasy"])
    
    def get_available_genres(self) -> list:
        """利用可能なジャンル一覧を取得"""
        return list(self.templates.keys())
    
    def get_genre_display_names(self) -> dict:
        """ジャンルの表示名を取得"""
        return self.display_names

# グローバルインスタンス
plot_templates = PlotTemplates() 